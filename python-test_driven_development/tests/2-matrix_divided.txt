>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
>>> matrix_divided([[10, 20], [30, 40]], 10)
[[1.0, 2.0], [3.0, 4.0]]
>>> matrix_divided([[1, -2, 3], [-4, 5, -6]], -2)
[[-0.5, 1.0, -1.5], [2.0, -2.5, 3.0]]
>>> matrix_divided([[5, 10], [15, 20]], 0.5)
[[10.0, 20.0], [30.0, 40.0]]
>>> matrix_divided([[1, 2], [3, 4]], "string")
Traceback (most recent call last):
    ...
TypeError: div must be a number
>>> matrix_divided([[1, 2], [3, 4]], 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero
>>> matrix_divided([1, 2, 3], 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided([[1, 2, 3], [4, 5]], 2)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], float('inf'))
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]
>>> matrix_divided([[1, 2, 3], [4, 5, 6]])
Traceback (most recent call last):
    ...
TypeError: matrix_divided() missing 1 required positional argument: 'div'